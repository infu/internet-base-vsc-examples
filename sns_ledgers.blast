{"cells":[{"kind":2,"language":"javascript","value":"// encodeIcrcAccount and decodeIcrcAccount come from https://github.com/dfinity/ic-js/tree/main/packages/ledger#gear-encodeicrcaccount\n\nlet ledger = await ic(\"zfcdd-tqaaa-aaaaq-aaaga-cai\");\n\n// No subaccount\n\nlog(`Balance of ${encodeIcrcAccount({ owner: me })}`);\n\nawait ledger.icrc1_balance_of({\n    owner: me\n}).then(log)\n\n// Subaccount from ID\n\nlet subaccount_1 =SubAccount.fromID(3).toUint8Array()\nlog(`Balance of ${encodeIcrcAccount({ owner: me, subaccount: subaccount_1 })}`);\n\nawait ledger.icrc1_balance_of({\n  owner: me,\n  subaccount: subaccount_1,\n}).then(log)\n\n// Subaccount from Principal\n\nlet subaccount_2 = SubAccount.fromPrincipal(Principal.fromText(\"zfcdd-tqaaa-aaaaq-aaaga-cai\")).toUint8Array();\nlog(`Balance of ${encodeIcrcAccount({ owner: me, subaccount: subaccount_2 })}`);\n\nawait ledger.icrc1_balance_of({\n  owner: me,\n  subaccount: subaccount_2,\n}).then(log)\n\n"},{"kind":2,"language":"javascript","value":"// Account from text\n\nlet textAccount = \"ravrr-pxsbj-n36e6-jfg4l-gyadn-j527j-oytfl-a4r3y-bhgvu-vn7oq-uqe-bamkccq.a000000000200000c0101000000000000000000000000000000000000000000\"\nlog(decodeIcrcAccount(textAccount))\n\n// README: The log() function passes everything thru toState() and converts Principals to Text and Uint8Arrays to Hex strings\n// To see the actuall values look at VS Code Output panel and select 'Blast' from the dropdown\n"}]}